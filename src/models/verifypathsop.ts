/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ErrorT, ErrorT$zodSchema } from "./error.js";
import { VerifyApiPaths, VerifyApiPaths$zodSchema } from "./verifyapipaths.js";
import {
  VerifyApiPathsResponse,
  VerifyApiPathsResponse$zodSchema,
} from "./verifyapipathsresponse.js";

export type VerifyPathsRequest = {
  envId?: string | undefined;
  VerifyApiPaths: VerifyApiPaths;
};

export const VerifyPathsRequest$zodSchema: z.ZodType<
  VerifyPathsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  VerifyApiPaths: VerifyApiPaths$zodSchema,
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
});

export type VerifyPathsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  VerifyApiPathsResponse?: VerifyApiPathsResponse | undefined;
  ErrorT?: ErrorT | undefined;
};

export const VerifyPathsResponse$zodSchema: z.ZodType<
  VerifyPathsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  VerifyApiPathsResponse: VerifyApiPathsResponse$zodSchema.optional(),
});
