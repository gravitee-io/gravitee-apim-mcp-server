/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  EndpointHealthCheckService,
  EndpointHealthCheckService$zodSchema,
} from "./endpointhealthcheckservice.js";
import { EndpointStatus, EndpointStatus$zodSchema } from "./endpointstatus.js";
import {
  HttpClientOptions,
  HttpClientOptions$zodSchema,
} from "./httpclientoptions.js";
import {
  HttpClientSslOptions,
  HttpClientSslOptions$zodSchema,
} from "./httpclientssloptions.js";
import { HttpHeader, HttpHeader$zodSchema } from "./httpheader.js";
import { HttpProxy, HttpProxy$zodSchema } from "./httpproxy.js";

export type HttpEndpointV2 = {
  name?: string | undefined;
  target?: string | undefined;
  weight?: number | undefined;
  backup?: boolean | undefined;
  status?: EndpointStatus | undefined;
  tenants?: Array<string> | undefined;
  type: string;
  inherit?: boolean | undefined;
  healthCheck?: EndpointHealthCheckService | undefined;
  httpProxy?: HttpProxy | undefined;
  httpClientOptions?: HttpClientOptions | undefined;
  httpClientSslOptions?: HttpClientSslOptions | undefined;
  headers?: Array<HttpHeader> | undefined;
};

export const HttpEndpointV2$zodSchema: z.ZodType<
  HttpEndpointV2,
  z.ZodTypeDef,
  unknown
> = z.object({
  backup: z.boolean().default(false),
  headers: z.array(HttpHeader$zodSchema).optional(),
  healthCheck: EndpointHealthCheckService$zodSchema.optional(),
  httpClientOptions: HttpClientOptions$zodSchema.optional(),
  httpClientSslOptions: HttpClientSslOptions$zodSchema.optional(),
  httpProxy: HttpProxy$zodSchema.optional(),
  inherit: z.boolean().default(false),
  name: z.string().optional(),
  status: EndpointStatus$zodSchema.optional(),
  target: z.string().optional(),
  tenants: z.array(z.string()).optional(),
  type: z.string(),
  weight: z.number().int().default(1),
});
