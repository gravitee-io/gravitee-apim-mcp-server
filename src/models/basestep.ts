/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The configuration of the step
 */
export type BaseStepConfiguration = {};

export const BaseStepConfiguration$zodSchema: z.ZodType<
  BaseStepConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({}).describe("The configuration of the step");

export type BaseStep = {
  name?: string | undefined;
  description?: string | undefined;
  enabled?: boolean | undefined;
  policy?: string | undefined;
  configuration?: BaseStepConfiguration | undefined;
  condition?: string | undefined;
};

export const BaseStep$zodSchema: z.ZodType<BaseStep, z.ZodTypeDef, unknown> = z
  .object({
    condition: z.string().optional(),
    configuration: z.lazy(() => BaseStepConfiguration$zodSchema).optional(),
    description: z.string().optional(),
    enabled: z.boolean().default(true),
    name: z.string().optional(),
    policy: z.string().optional(),
  });
