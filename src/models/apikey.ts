/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BaseApplication,
  BaseApplication$zodSchema,
} from "./baseapplication.js";
import {
  BaseSubscription,
  BaseSubscription$zodSchema,
} from "./basesubscription.js";

export type ApiKey = {
  id?: string | undefined;
  key?: string | undefined;
  application?: BaseApplication | undefined;
  subscriptions?: Array<BaseSubscription> | undefined;
  revoked?: boolean | undefined;
  paused?: boolean | undefined;
  expired?: boolean | undefined;
  daysToExpirationOnLastNotification?: number | undefined;
  expireAt?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  revokedAt?: string | undefined;
};

export const ApiKey$zodSchema: z.ZodType<ApiKey, z.ZodTypeDef, unknown> = z
  .object({
    application: BaseApplication$zodSchema.optional(),
    createdAt: z.string().datetime({ offset: true }).optional(),
    daysToExpirationOnLastNotification: z.number().int().optional(),
    expireAt: z.string().datetime({ offset: true }).optional(),
    expired: z.boolean().optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    paused: z.boolean().optional(),
    revoked: z.boolean().optional(),
    revokedAt: z.string().datetime({ offset: true }).optional(),
    subscriptions: z.array(BaseSubscription$zodSchema).optional(),
    updatedAt: z.string().datetime({ offset: true }).optional(),
  });
