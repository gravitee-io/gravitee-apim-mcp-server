/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiMetadataSortByParam,
  ApiMetadataSortByParam$zodSchema,
} from "./apimetadatasortbyparam.js";
import {
  ApiMetadataSourceParam,
  ApiMetadataSourceParam$zodSchema,
} from "./apimetadatasourceparam.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";
import {
  MetadataResponse,
  MetadataResponse$zodSchema,
} from "./metadataresponse.js";

export type GetApiMetadataRequest = {
  envId?: string | undefined;
  apiId: string;
  page?: number | undefined;
  perPage?: number | undefined;
  source?: Array<ApiMetadataSourceParam> | undefined;
  sortBy?: ApiMetadataSortByParam | undefined;
};

export const GetApiMetadataRequest$zodSchema: z.ZodType<
  GetApiMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiId: z.string().describe("Id of an API."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
  page: z.number().int().default(1).describe("The page number for pagination."),
  perPage: z.number().int().default(10).describe(
    "The number of items per page for pagination.\n"
      + "",
  ),
  sortBy: ApiMetadataSortByParam$zodSchema.optional(),
  source: z.array(ApiMetadataSourceParam$zodSchema).describe(
    "Determines source of API Metadata (GLOBAL or API).",
  ).optional(),
});

export type GetApiMetadataResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  MetadataResponse?: MetadataResponse | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetApiMetadataResponse$zodSchema: z.ZodType<
  GetApiMetadataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  MetadataResponse: MetadataResponse$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
