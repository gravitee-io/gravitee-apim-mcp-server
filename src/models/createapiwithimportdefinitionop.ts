/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiV4Output, ApiV4Output$zodSchema } from "./apiv4output.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";
import {
  ExportApiV4Input,
  ExportApiV4Input$zodSchema,
} from "./exportapiv4input.js";

export type CreateApiWithImportDefinitionRequest = {
  envId?: string | undefined;
  ExportApiV4: ExportApiV4Input;
};

export const CreateApiWithImportDefinitionRequest$zodSchema: z.ZodType<
  CreateApiWithImportDefinitionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ExportApiV4: ExportApiV4Input$zodSchema,
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
});

export type CreateApiWithImportDefinitionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ApiV4?: ApiV4Output | undefined;
  ErrorT?: ErrorT | undefined;
};

export const CreateApiWithImportDefinitionResponse$zodSchema: z.ZodType<
  CreateApiWithImportDefinitionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ApiV4: ApiV4Output$zodSchema.optional(),
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
