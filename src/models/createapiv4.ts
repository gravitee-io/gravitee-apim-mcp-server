/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Analytics, Analytics$zodSchema } from "./analytics.js";
import { ApiType, ApiType$zodSchema } from "./apitype.js";
import {
  DefinitionVersion,
  DefinitionVersion$zodSchema,
} from "./definitionversion.js";
import {
  EndpointGroupV4,
  EndpointGroupV4$zodSchema,
} from "./endpointgroupv4.js";
import { FailoverV4, FailoverV4$zodSchema } from "./failoverv4.js";
import { FlowExecution, FlowExecution$zodSchema } from "./flowexecution.js";
import { FlowV4, FlowV4$zodSchema } from "./flowv4.js";
import { Listener, Listener$zodSchema } from "./listener.js";

export type CreateApiV4 = {
  name: string;
  apiVersion: string;
  description?: string | undefined;
  definitionVersion: DefinitionVersion;
  groups?: Array<string> | undefined;
  type: ApiType;
  tags?: Array<string> | undefined;
  listeners: Array<Listener>;
  endpointGroups: Array<EndpointGroupV4>;
  analytics?: Analytics | undefined;
  failover?: FailoverV4 | undefined;
  flowExecution?: FlowExecution | undefined;
  flows?: Array<FlowV4> | undefined;
};

export const CreateApiV4$zodSchema: z.ZodType<
  CreateApiV4,
  z.ZodTypeDef,
  unknown
> = z.object({
  analytics: Analytics$zodSchema.optional(),
  apiVersion: z.string(),
  definitionVersion: DefinitionVersion$zodSchema,
  description: z.string().optional(),
  endpointGroups: z.array(EndpointGroupV4$zodSchema),
  failover: FailoverV4$zodSchema.optional(),
  flowExecution: FlowExecution$zodSchema.optional(),
  flows: z.array(FlowV4$zodSchema).optional(),
  groups: z.array(z.string()).optional(),
  listeners: z.array(Listener$zodSchema),
  name: z.string(),
  tags: z.array(z.string()).optional(),
  type: ApiType$zodSchema,
});
