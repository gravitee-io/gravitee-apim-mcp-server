/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { BaseUser, BaseUser$zodSchema } from "./baseuser.js";
import { EventType, EventType$zodSchema } from "./eventtype.js";

export type Event = {
  id?: string | undefined;
  createdAt?: string | undefined;
  environmentIds?: Array<string> | undefined;
  initiator?: BaseUser | undefined;
  type?: EventType | undefined;
  payload?: string | undefined;
  properties?: { [k: string]: string } | undefined;
};

export const Event$zodSchema: z.ZodType<Event, z.ZodTypeDef, unknown> = z
  .object({
    createdAt: z.string().datetime({ offset: true }).optional(),
    environmentIds: z.array(z.string()).optional(),
    id: z.string().optional(),
    initiator: BaseUser$zodSchema.optional(),
    payload: z.string().optional(),
    properties: z.record(z.string()).optional(),
    type: EventType$zodSchema.optional(),
  });
