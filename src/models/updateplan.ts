/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  UpdatePlanFederated,
  UpdatePlanFederated$zodSchema,
} from "./updateplanfederated.js";
import { UpdatePlanV2, UpdatePlanV2$zodSchema } from "./updateplanv2.js";
import { UpdatePlanV4, UpdatePlanV4$zodSchema } from "./updateplanv4.js";

export type UpdatePlan =
  | (UpdatePlanFederated & { definitionVersion: "FEDERATED" })
  | (UpdatePlanV4 & { definitionVersion: "V4" })
  | (UpdatePlanV2 & { definitionVersion: "V2" });

export const UpdatePlan$zodSchema: z.ZodType<
  UpdatePlan,
  z.ZodTypeDef,
  unknown
> = z.union([
  UpdatePlanFederated$zodSchema.and(
    z.object({
      definitionVersion: z.literal("FEDERATED"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
  UpdatePlanV4$zodSchema.and(
    z.object({
      definitionVersion: z.literal("V4"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
  UpdatePlanV2$zodSchema.and(
    z.object({
      definitionVersion: z.literal("V2"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
]);
