/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  EndpointGroupServices,
  EndpointGroupServices$zodSchema,
} from "./endpointgroupservices.js";
import { EndpointV4, EndpointV4$zodSchema } from "./endpointv4.js";
import { LoadBalancer, LoadBalancer$zodSchema } from "./loadbalancer.js";

export type SharedConfiguration = {};

export const SharedConfiguration$zodSchema: z.ZodType<
  SharedConfiguration,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type EndpointGroupV4 = {
  name?: string | undefined;
  type: string;
  loadBalancer?: LoadBalancer | undefined;
  sharedConfiguration?: SharedConfiguration | undefined;
  endpoints?: Array<EndpointV4> | undefined;
  services?: EndpointGroupServices | undefined;
};

export const EndpointGroupV4$zodSchema: z.ZodType<
  EndpointGroupV4,
  z.ZodTypeDef,
  unknown
> = z.object({
  endpoints: z.array(EndpointV4$zodSchema).optional(),
  loadBalancer: LoadBalancer$zodSchema.optional(),
  name: z.string().optional(),
  services: EndpointGroupServices$zodSchema.optional(),
  sharedConfiguration: z.lazy(() => SharedConfiguration$zodSchema).optional(),
  type: z.string(),
});
