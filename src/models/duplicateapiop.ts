/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Api, Api$zodSchema } from "./api.js";
import {
  DuplicateApiOptions,
  DuplicateApiOptions$zodSchema,
} from "./duplicateapioptions.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";

export type DuplicateApiRequest = {
  envId?: string | undefined;
  apiId: string;
  DuplicateApiOptions: DuplicateApiOptions;
};

export const DuplicateApiRequest$zodSchema: z.ZodType<
  DuplicateApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  DuplicateApiOptions: DuplicateApiOptions$zodSchema,
  apiId: z.string().describe("Id of an API."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
});

export type DuplicateApiResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Api?: Api | undefined;
  ErrorT?: ErrorT | undefined;
};

export const DuplicateApiResponse$zodSchema: z.ZodType<
  DuplicateApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Api: Api$zodSchema.optional(),
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
