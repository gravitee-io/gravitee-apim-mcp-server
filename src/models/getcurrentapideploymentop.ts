/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ErrorT, ErrorT$zodSchema } from "./error.js";

export type GetCurrentApiDeploymentRequest = {
  envId?: string | undefined;
  apiId: string;
};

export const GetCurrentApiDeploymentRequest$zodSchema: z.ZodType<
  GetCurrentApiDeploymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiId: z.string().describe("Id of an API."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
});

/**
 * Current API deployment found
 */
export type GetCurrentApiDeploymentResponseBody = {};

export const GetCurrentApiDeploymentResponseBody$zodSchema: z.ZodType<
  GetCurrentApiDeploymentResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({}).describe("Current API deployment found");

export type GetCurrentApiDeploymentResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: GetCurrentApiDeploymentResponseBody | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetCurrentApiDeploymentResponse$zodSchema: z.ZodType<
  GetCurrentApiDeploymentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetCurrentApiDeploymentResponseBody$zodSchema)
    .optional(),
});
