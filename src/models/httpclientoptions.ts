/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ProtocolVersion,
  ProtocolVersion$zodSchema,
} from "./protocolversion.js";

export type HttpClientOptions = {
  idleTimeout?: number | undefined;
  keepAliveTimeout?: number | undefined;
  connectTimeout?: number | undefined;
  keepAlive?: boolean | undefined;
  readTimeout?: number | undefined;
  pipelining?: boolean | undefined;
  maxConcurrentConnections?: number | undefined;
  useCompression?: boolean | undefined;
  propagateClientAcceptEncoding?: boolean | undefined;
  followRedirects?: boolean | undefined;
  clearTextUpgrade?: boolean | undefined;
  version?: ProtocolVersion | undefined;
};

export const HttpClientOptions$zodSchema: z.ZodType<
  HttpClientOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  clearTextUpgrade: z.boolean().default(true),
  connectTimeout: z.number().int().default(5000),
  followRedirects: z.boolean().default(false),
  idleTimeout: z.number().int().default(60000),
  keepAlive: z.boolean().default(true),
  keepAliveTimeout: z.number().int().default(30000),
  maxConcurrentConnections: z.number().int().default(100),
  pipelining: z.boolean().default(false),
  propagateClientAcceptEncoding: z.boolean().default(false),
  readTimeout: z.number().int().default(10000),
  useCompression: z.boolean().default(true),
  version: ProtocolVersion$zodSchema.default("HTTP_1_1"),
});
