/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiLogRequestContent,
  ApiLogRequestContent$zodSchema,
} from "./apilogrequestcontent.js";
import {
  ApiLogResponseContent,
  ApiLogResponseContent$zodSchema,
} from "./apilogresponsecontent.js";

/**
 * API log for a request.
 */
export type ApiLogResponse = {
  timestamp?: string | undefined;
  apiId?: string | undefined;
  requestId?: string | undefined;
  clientIdentifier?: string | undefined;
  transactionId?: string | undefined;
  requestEnded?: boolean | undefined;
  entrypointRequest?: ApiLogRequestContent | undefined;
  entrypointResponse?: ApiLogResponseContent | undefined;
  endpointRequest?: ApiLogRequestContent | undefined;
  endpointResponse?: ApiLogResponseContent | undefined;
};

export const ApiLogResponse$zodSchema: z.ZodType<
  ApiLogResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiId: z.string().optional(),
  clientIdentifier: z.string().optional(),
  endpointRequest: ApiLogRequestContent$zodSchema.optional(),
  endpointResponse: ApiLogResponseContent$zodSchema.optional(),
  entrypointRequest: ApiLogRequestContent$zodSchema.optional(),
  entrypointResponse: ApiLogResponseContent$zodSchema.optional(),
  requestEnded: z.boolean().optional(),
  requestId: z.string().optional(),
  timestamp: z.string().datetime({ offset: true }).optional(),
  transactionId: z.string().optional(),
}).describe("API log for a request.");
