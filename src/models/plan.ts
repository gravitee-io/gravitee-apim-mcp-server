/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { PlanFederated, PlanFederated$zodSchema } from "./planfederated.js";
import { PlanV2, PlanV2$zodSchema } from "./planv2.js";
import { PlanV4, PlanV4$zodSchema } from "./planv4.js";

export type Plan =
  | (PlanFederated & { definitionVersion: "FEDERATED" })
  | (PlanV4 & { definitionVersion: "V4" })
  | (PlanV2 & { definitionVersion: "V2" });

export const Plan$zodSchema: z.ZodType<Plan, z.ZodTypeDef, unknown> = z.union([
  PlanFederated$zodSchema.and(
    z.object({
      definitionVersion: z.literal("FEDERATED"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
  PlanV4$zodSchema.and(
    z.object({
      definitionVersion: z.literal("V4"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
  PlanV2$zodSchema.and(
    z.object({
      definitionVersion: z.literal("V2"),
    }).transform((v) => ({ definitionVersion: v.definitionVersion })),
  ),
]);
