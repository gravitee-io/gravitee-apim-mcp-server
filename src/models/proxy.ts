/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Cors, Cors$zodSchema } from "./cors.js";
import {
  EndpointGroupV2,
  EndpointGroupV2$zodSchema,
} from "./endpointgroupv2.js";
import { Failover, Failover$zodSchema } from "./failover.js";
import { LoggingV2, LoggingV2$zodSchema } from "./loggingv2.js";
import { VirtualHost, VirtualHost$zodSchema } from "./virtualhost.js";

export type Proxy = {
  virtualHosts?: Array<VirtualHost> | undefined;
  groups?: Array<EndpointGroupV2> | undefined;
  failover?: Failover | undefined;
  cors?: Cors | undefined;
  logging?: LoggingV2 | undefined;
  stripContextPath?: boolean | undefined;
  preserveHost?: boolean | undefined;
  servers?: Array<string> | undefined;
};

export const Proxy$zodSchema: z.ZodType<Proxy, z.ZodTypeDef, unknown> = z
  .object({
    cors: Cors$zodSchema.optional(),
    failover: Failover$zodSchema.optional(),
    groups: z.array(EndpointGroupV2$zodSchema).optional(),
    logging: LoggingV2$zodSchema.optional(),
    preserveHost: z.boolean().default(false),
    servers: z.array(z.string()).optional(),
    stripContextPath: z.boolean().default(false),
    virtualHosts: z.array(VirtualHost$zodSchema).optional(),
  });
