/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiAnalyticsAverageConnectionDurationResponse,
  ApiAnalyticsAverageConnectionDurationResponse$zodSchema,
} from "./apianalyticsaverageconnectiondurationresponse.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";

export type GetAverageConnectionDurationRequest = {
  envId?: string | undefined;
  apiId: string;
  from?: number | undefined;
  to?: number | undefined;
};

export const GetAverageConnectionDurationRequest$zodSchema: z.ZodType<
  GetAverageConnectionDurationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiId: z.string().describe("Id of an API."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
  from: z.number().int().describe(
    "The timestamp from which the logs will be returned.\n"
      + "",
  ).optional(),
  to: z.number().int().describe(
    "The timestamp to which the logs will be returned.\n"
      + "",
  ).optional(),
});

export type GetAverageConnectionDurationResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ApiAnalyticsAverageConnectionDurationResponse?:
    | ApiAnalyticsAverageConnectionDurationResponse
    | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetAverageConnectionDurationResponse$zodSchema: z.ZodType<
  GetAverageConnectionDurationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ApiAnalyticsAverageConnectionDurationResponse:
    ApiAnalyticsAverageConnectionDurationResponse$zodSchema.optional(),
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
