/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CategoryApisResponse,
  CategoryApisResponse$zodSchema,
} from "./categoryapisresponse.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";

export type GetCategoryApisPageRequest = {
  envId?: string | undefined;
  categoryIdOrKey: string;
  page?: number | undefined;
  perPage?: number | undefined;
};

export const GetCategoryApisPageRequest$zodSchema: z.ZodType<
  GetCategoryApisPageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  categoryIdOrKey: z.string().describe("Id or Key of a category."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
  page: z.number().int().default(1).describe("The page number for pagination."),
  perPage: z.number().int().default(10).describe(
    "The number of items per page for pagination.\n"
      + "",
  ),
});

export type GetCategoryApisPageResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  CategoryApisResponse?: CategoryApisResponse | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetCategoryApisPageResponse$zodSchema: z.ZodType<
  GetCategoryApisPageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  CategoryApisResponse: CategoryApisResponse$zodSchema.optional(),
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
