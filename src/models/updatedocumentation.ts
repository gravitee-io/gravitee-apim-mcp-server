/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AccessControl, AccessControl$zodSchema } from "./accesscontrol.js";
import { PageSource, PageSource$zodSchema } from "./pagesource.js";
import { Visibility, Visibility$zodSchema } from "./visibility.js";

/**
 * The type of documentation to update.
 */
export const UpdateDocumentationType$zodSchema = z.enum([
  "FOLDER",
  "MARKDOWN",
  "SWAGGER",
  "ASYNCAPI",
  "ASCIIDOC",
]).describe("The type of documentation to update.");

export type UpdateDocumentationType = z.infer<
  typeof UpdateDocumentationType$zodSchema
>;

export type UpdateDocumentation = {
  type: UpdateDocumentationType;
  name: string;
  order?: number | undefined;
  visibility?: Visibility | undefined;
  excludedAccessControls?: boolean | undefined;
  accessControls?: Array<AccessControl> | undefined;
  configuration?: { [k: string]: string } | undefined;
  source?: PageSource | undefined;
};

export const UpdateDocumentation$zodSchema: z.ZodType<
  UpdateDocumentation,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessControls: z.array(AccessControl$zodSchema).optional(),
  configuration: z.record(z.string()).optional(),
  excludedAccessControls: z.boolean().optional(),
  name: z.string(),
  order: z.number().int().default(0),
  source: PageSource$zodSchema.optional(),
  type: UpdateDocumentationType$zodSchema,
  visibility: Visibility$zodSchema.optional(),
});
