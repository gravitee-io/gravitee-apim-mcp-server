/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { BaseStep, BaseStep$zodSchema } from "./basestep.js";
import { Consumer, Consumer$zodSchema } from "./consumer.js";
import { FlowStage, FlowStage$zodSchema } from "./flowstage.js";
import { HttpMethod, HttpMethod$zodSchema } from "./httpmethod.js";
import { PathOperator, PathOperator$zodSchema } from "./pathoperator.js";

export type FlowV2 = {
  id?: string | undefined;
  name?: string | undefined;
  pathOperator?: PathOperator | undefined;
  pre?: Array<BaseStep> | undefined;
  post?: Array<BaseStep> | undefined;
  enabled?: boolean | undefined;
  methods?: Array<HttpMethod> | undefined;
  condition?: string | undefined;
  consumers?: Array<Consumer> | undefined;
  stage?: FlowStage | undefined;
};

export const FlowV2$zodSchema: z.ZodType<FlowV2, z.ZodTypeDef, unknown> = z
  .object({
    condition: z.string().optional(),
    consumers: z.array(Consumer$zodSchema).optional(),
    enabled: z.boolean().default(true),
    id: z.string().optional(),
    methods: z.array(HttpMethod$zodSchema).optional(),
    name: z.string().optional(),
    pathOperator: PathOperator$zodSchema.optional(),
    post: z.array(BaseStep$zodSchema).optional(),
    pre: z.array(BaseStep$zodSchema).optional(),
    stage: FlowStage$zodSchema.optional(),
  });
