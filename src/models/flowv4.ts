/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Selector, Selector$zodSchema } from "./selector.js";
import { StepV4, StepV4$zodSchema } from "./stepv4.js";

export type FlowV4 = {
  id?: string | undefined;
  name?: string | undefined;
  enabled?: boolean | undefined;
  selectors?: Array<Selector> | undefined;
  request?: Array<StepV4> | undefined;
  response?: Array<StepV4> | undefined;
  subscribe?: Array<StepV4> | undefined;
  publish?: Array<StepV4> | undefined;
  connect?: Array<StepV4> | undefined;
  interact?: Array<StepV4> | undefined;
  tags?: Array<string> | undefined;
};

export const FlowV4$zodSchema: z.ZodType<FlowV4, z.ZodTypeDef, unknown> = z
  .object({
    connect: z.array(StepV4$zodSchema).optional(),
    enabled: z.boolean().default(true),
    id: z.string().optional(),
    interact: z.array(StepV4$zodSchema).optional(),
    name: z.string().optional(),
    publish: z.array(StepV4$zodSchema).optional(),
    request: z.array(StepV4$zodSchema).optional(),
    response: z.array(StepV4$zodSchema).optional(),
    selectors: z.array(Selector$zodSchema).optional(),
    subscribe: z.array(StepV4$zodSchema).optional(),
    tags: z.array(z.string()).optional(),
  });
