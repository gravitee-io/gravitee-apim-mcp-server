/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiHealthAverageResponseTimeOvertimeResponse,
  ApiHealthAverageResponseTimeOvertimeResponse$zodSchema,
} from "./apihealthaverageresponsetimeovertimeresponse.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";

export type GetApiHealthAverageResponseTimeOvertimeRequest = {
  envId?: string | undefined;
  apiId: string;
  from?: number | undefined;
  to?: number | undefined;
};

export const GetApiHealthAverageResponseTimeOvertimeRequest$zodSchema:
  z.ZodType<
    GetApiHealthAverageResponseTimeOvertimeRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    apiId: z.string().describe("Id of an API."),
    envId: z.string().default("DEFAULT").describe(
      "Id or Hrid (Human readable Id) of an environment.",
    ),
    from: z.number().int().describe(
      "The timestamp from which the logs will be returned.\n"
        + "",
    ).optional(),
    to: z.number().int().describe(
      "The timestamp to which the logs will be returned.\n"
        + "",
    ).optional(),
  });

export type GetApiHealthAverageResponseTimeOvertimeResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ApiHealthAverageResponseTimeOvertimeResponse?:
    | ApiHealthAverageResponseTimeOvertimeResponse
    | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetApiHealthAverageResponseTimeOvertimeResponse$zodSchema:
  z.ZodType<
    GetApiHealthAverageResponseTimeOvertimeResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ApiHealthAverageResponseTimeOvertimeResponse:
      ApiHealthAverageResponseTimeOvertimeResponse$zodSchema.optional(),
    ContentType: z.string(),
    ErrorT: ErrorT$zodSchema.optional(),
    RawResponse: z.instanceof(Response),
    StatusCode: z.number().int(),
  });
