/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiLifecycleState,
  ApiLifecycleState$zodSchema,
} from "./apilifecyclestate.js";
import { ApiServicesV2, ApiServicesV2$zodSchema } from "./apiservicesv2.js";
import {
  DefinitionVersion,
  DefinitionVersion$zodSchema,
} from "./definitionversion.js";
import { ExecutionMode, ExecutionMode$zodSchema } from "./executionmode.js";
import { FlowMode, FlowMode$zodSchema } from "./flowmode.js";
import { FlowV2, FlowV2$zodSchema } from "./flowv2.js";
import { Property, Property$zodSchema } from "./property.js";
import { Proxy, Proxy$zodSchema } from "./proxy.js";
import { Resource, Resource$zodSchema } from "./resource.js";
import {
  ResponseTemplate,
  ResponseTemplate$zodSchema,
} from "./responsetemplate.js";
import { Visibility, Visibility$zodSchema } from "./visibility.js";

export type UpdateApiV2 = {
  name: string;
  apiVersion: string;
  description?: string | undefined;
  definitionVersion: DefinitionVersion;
  groups?: Array<string> | undefined;
  tags?: Array<string> | undefined;
  resources?: Array<Resource> | undefined;
  responseTemplates?:
    | { [k: string]: { [k: string]: ResponseTemplate } }
    | undefined;
  visibility?: Visibility | undefined;
  categories?: Array<string> | undefined;
  labels?: Array<string> | undefined;
  lifecycleState?: ApiLifecycleState | undefined;
  disableMembershipNotifications?: boolean | undefined;
  properties?: Array<Property> | undefined;
  proxy?: Proxy | undefined;
  flowMode?: FlowMode | undefined;
  flows?: Array<FlowV2> | undefined;
  services?: ApiServicesV2 | undefined;
  pathMappings?: Array<string> | undefined;
  executionMode?: ExecutionMode | undefined;
};

export const UpdateApiV2$zodSchema: z.ZodType<
  UpdateApiV2,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiVersion: z.string(),
  categories: z.array(z.string()).optional(),
  definitionVersion: DefinitionVersion$zodSchema,
  description: z.string().optional(),
  disableMembershipNotifications: z.boolean().default(false),
  executionMode: ExecutionMode$zodSchema.default("V4_EMULATION_ENGINE"),
  flowMode: FlowMode$zodSchema.default("DEFAULT"),
  flows: z.array(FlowV2$zodSchema).optional(),
  groups: z.array(z.string()).optional(),
  labels: z.array(z.string()).optional(),
  lifecycleState: ApiLifecycleState$zodSchema.optional(),
  name: z.string(),
  pathMappings: z.array(z.string()).optional(),
  properties: z.array(Property$zodSchema).optional(),
  proxy: Proxy$zodSchema.optional(),
  resources: z.array(Resource$zodSchema).optional(),
  responseTemplates: z.record(z.record(ResponseTemplate$zodSchema)).optional(),
  services: ApiServicesV2$zodSchema.optional(),
  tags: z.array(z.string()).optional(),
  visibility: Visibility$zodSchema.optional(),
});
