/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  UpdateApiFederated,
  UpdateApiFederated$zodSchema,
} from "./updateapifederated.js";
import { UpdateApiV2, UpdateApiV2$zodSchema } from "./updateapiv2.js";
import { UpdateApiV4, UpdateApiV4$zodSchema } from "./updateapiv4.js";

export type UpdateApi =
  | (UpdateApiFederated & { definitionVersion: "FEDERATED" })
  | (UpdateApiV2 & { definitionVersion: "V2" })
  | (UpdateApiV4 & { definitionVersion: "V4" });

export const UpdateApi$zodSchema: z.ZodType<UpdateApi, z.ZodTypeDef, unknown> =
  z.union([
    UpdateApiFederated$zodSchema.and(
      z.object({
        definitionVersion: z.literal("FEDERATED"),
      }).transform((v) => ({ definitionVersion: v.definitionVersion })),
    ),
    UpdateApiV2$zodSchema.and(
      z.object({
        definitionVersion: z.literal("V2"),
      }).transform((v) => ({ definitionVersion: v.definitionVersion })),
    ),
    UpdateApiV4$zodSchema.and(
      z.object({
        definitionVersion: z.literal("V4"),
      }).transform((v) => ({ definitionVersion: v.definitionVersion })),
    ),
  ]);
