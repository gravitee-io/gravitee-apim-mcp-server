/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BaseApplication,
  BaseApplication$zodSchema,
} from "./baseapplication.js";
import { BasePlan, BasePlan$zodSchema } from "./baseplan.js";
import { HttpMethod, HttpMethod$zodSchema } from "./httpmethod.js";

export type ApiLog = {
  timestamp?: string | undefined;
  id?: string | undefined;
  requestId?: string | undefined;
  method?: HttpMethod | undefined;
  clientIdentifier?: string | undefined;
  plan?: BasePlan | undefined;
  application?: BaseApplication | undefined;
  transactionId?: string | undefined;
  status?: number | undefined;
  requestEnded?: boolean | undefined;
};

export const ApiLog$zodSchema: z.ZodType<ApiLog, z.ZodTypeDef, unknown> = z
  .object({
    application: BaseApplication$zodSchema.optional(),
    clientIdentifier: z.string().optional(),
    id: z.string().optional(),
    method: HttpMethod$zodSchema.optional(),
    plan: BasePlan$zodSchema.optional(),
    requestEnded: z.boolean().optional(),
    requestId: z.string().optional(),
    status: z.number().int().optional(),
    timestamp: z.string().datetime({ offset: true }).optional(),
    transactionId: z.string().optional(),
  });
