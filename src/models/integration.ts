/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { IngestionJob, IngestionJob$zodSchema } from "./ingestionjob.js";
import { PrimaryOwner, PrimaryOwner$zodSchema } from "./primaryowner.js";

/**
 * Agent connection status
 */
export const AgentStatus$zodSchema = z.enum([
  "CONNECTED",
  "DISCONNECTED",
]).describe("Agent connection status");

export type AgentStatus = z.infer<typeof AgentStatus$zodSchema>;

export type Integration = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  provider?: string | undefined;
  agentStatus?: AgentStatus | undefined;
  pendingJob?: IngestionJob | undefined;
  primaryOwner?: PrimaryOwner | undefined;
  groups?: Array<string> | undefined;
};

export const Integration$zodSchema: z.ZodType<
  Integration,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentStatus: AgentStatus$zodSchema.optional(),
  description: z.string().optional(),
  groups: z.array(z.string()).optional(),
  id: z.string().optional(),
  name: z.string().optional(),
  pendingJob: IngestionJob$zodSchema.optional(),
  primaryOwner: PrimaryOwner$zodSchema.optional(),
  provider: z.string().optional(),
});
