/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ChannelSelector,
  ChannelSelector$zodSchema,
} from "./channelselector.js";
import {
  ConditionSelector,
  ConditionSelector$zodSchema,
} from "./conditionselector.js";
import { HttpSelector, HttpSelector$zodSchema } from "./httpselector.js";

export type Selector =
  | (ConditionSelector & { type: "CONDITION" })
  | (HttpSelector & { type: "HTTP" })
  | (ChannelSelector & { type: "CHANNEL" });

export const Selector$zodSchema: z.ZodType<Selector, z.ZodTypeDef, unknown> = z
  .union([
    ConditionSelector$zodSchema.and(
      z.object({
        type: z.literal("CONDITION"),
      }).transform((v) => ({ type: v.type })),
    ),
    HttpSelector$zodSchema.and(
      z.object({
        type: z.literal("HTTP"),
      }).transform((v) => ({ type: v.type })),
    ),
    ChannelSelector$zodSchema.and(
      z.object({
        type: z.literal("CHANNEL"),
      }).transform((v) => ({ type: v.type })),
    ),
  ]);
