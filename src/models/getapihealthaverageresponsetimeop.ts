/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ApiHealthAverageResponseTimeResponse,
  ApiHealthAverageResponseTimeResponse$zodSchema,
} from "./apihealthaverageresponsetimeresponse.js";
import { ErrorT, ErrorT$zodSchema } from "./error.js";
import { HealthField, HealthField$zodSchema } from "./healthfield.js";

export type GetApiHealthAverageResponseTimeRequest = {
  envId?: string | undefined;
  apiId: string;
  field?: HealthField | undefined;
};

export const GetApiHealthAverageResponseTimeRequest$zodSchema: z.ZodType<
  GetApiHealthAverageResponseTimeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiId: z.string().describe("Id of an API."),
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
  field: HealthField$zodSchema.default("endpoint"),
});

export type GetApiHealthAverageResponseTimeResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ApiHealthAverageResponseTimeResponse?:
    | ApiHealthAverageResponseTimeResponse
    | undefined;
  ErrorT?: ErrorT | undefined;
};

export const GetApiHealthAverageResponseTimeResponse$zodSchema: z.ZodType<
  GetApiHealthAverageResponseTimeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ApiHealthAverageResponseTimeResponse:
    ApiHealthAverageResponseTimeResponse$zodSchema.optional(),
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
