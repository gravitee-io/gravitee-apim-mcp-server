/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ErrorT, ErrorT$zodSchema } from "./error.js";
import { VerifyApiHosts, VerifyApiHosts$zodSchema } from "./verifyapihosts.js";
import {
  VerifyApiHostsResponse,
  VerifyApiHostsResponse$zodSchema,
} from "./verifyapihostsresponse.js";

export type VerifyHostsRequest = {
  envId?: string | undefined;
  VerifyApiHosts: VerifyApiHosts;
};

export const VerifyHostsRequest$zodSchema: z.ZodType<
  VerifyHostsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  VerifyApiHosts: VerifyApiHosts$zodSchema,
  envId: z.string().default("DEFAULT").describe(
    "Id or Hrid (Human readable Id) of an environment.",
  ),
});

export type VerifyHostsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  VerifyApiHostsResponse?: VerifyApiHostsResponse | undefined;
  ErrorT?: ErrorT | undefined;
};

export const VerifyHostsResponse$zodSchema: z.ZodType<
  VerifyHostsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ErrorT: ErrorT$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  VerifyApiHostsResponse: VerifyApiHostsResponse$zodSchema.optional(),
});
