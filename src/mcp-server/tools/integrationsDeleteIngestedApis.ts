/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationsDeleteIngestedApis } from "../../funcs/integrationsDeleteIngestedApis.js";
import { DeleteIngestedApisRequest$zodSchema } from "../../models/deleteingestedapisop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: DeleteIngestedApisRequest$zodSchema,
};

export const tool$integrationsDeleteIngestedApis: ToolDefinition<typeof args> =
  {
    name: "integrations-delete-ingested-apis",
    description: `Delete ingested APIs associated to integration

Delete APIs that were ingested from 3rd party provider using this integration. 

To delete APIs user must have ENVIRONMENT_API[DELETE] permission.
Only unpublished APIs will deleted. APIs that are published will be omitted!`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await integrationsDeleteIngestedApis(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
