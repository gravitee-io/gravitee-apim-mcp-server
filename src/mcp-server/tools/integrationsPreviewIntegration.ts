/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationsPreviewIntegration } from "../../funcs/integrationsPreviewIntegration.js";
import { PreviewIntegrationRequest$zodSchema } from "../../models/previewintegrationop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: PreviewIntegrationRequest$zodSchema,
};

export const tool$integrationsPreviewIntegration: ToolDefinition<typeof args> =
  {
    name: "integrations-preview-integration",
    description: `Preview APIs to ingest for a specific Integration

Preview APIs to ingest before actual ingestion.

User must have both the ENVIRONMENT_INTEGRATION[READ] and the ENVIRONMENT_API[CREATE] permission 
to perform ingestion preview.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await integrationsPreviewIntegration(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
