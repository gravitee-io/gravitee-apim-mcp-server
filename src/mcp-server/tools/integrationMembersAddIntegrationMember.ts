/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationMembersAddIntegrationMember } from "../../funcs/integrationMembersAddIntegrationMember.js";
import { AddIntegrationMemberRequest$zodSchema } from "../../models/addintegrationmemberop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: AddIntegrationMemberRequest$zodSchema,
};

export const tool$integrationMembersAddIntegrationMember: ToolDefinition<
  typeof args
> = {
  name: "integration-members-add-integration-member",
  description: `Add a member to an Integration.

Add a new member to an Integration.

Returns a 400 HTTP Error:
- when the user tries to set a member as PrimaryOwner.

User must have the INTEGRATION_MEMBER[CREATE] permission.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await integrationMembersAddIntegrationMember(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
