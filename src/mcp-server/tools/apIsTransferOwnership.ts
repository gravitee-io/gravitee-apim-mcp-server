/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apIsTransferOwnership } from "../../funcs/apIsTransferOwnership.js";
import { TransferOwnershipRequest$zodSchema } from "../../models/transferownershipop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: TransferOwnershipRequest$zodSchema,
};

export const tool$apIsTransferOwnership: ToolDefinition<typeof args> = {
  name: "AP-is-transfer-ownership",
  description: `Transfer the ownership of the API

Transfer the ownership of the API to a user, a group or an api member.

Return a 404 HTTP Error if API cannot be found.

Return a 400 HTTP Error:
 - when user tries to stop an ARCHIVED API
 - when the API is already STOPPED.

User must have the API_MEMBER[UPDATE] permission.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apIsTransferOwnership(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
