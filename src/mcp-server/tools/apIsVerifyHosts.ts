/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apIsVerifyHosts } from "../../funcs/apIsVerifyHosts.js";
import { VerifyHostsRequest$zodSchema } from "../../models/verifyhostsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: VerifyHostsRequest$zodSchema,
};

export const tool$apIsVerifyHosts: ToolDefinition<typeof args> = {
  name: "AP-is-verify-hosts",
  description: `Verify TCP and Kafka API hosts

Verify hosts before creating or updating a TCP or Kafka API.<br>
This will check it is not already used by other APIs in the environment.<br>
The result will indicate if the hosts are OK, and give the reason of the failure if they are not.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apIsVerifyHosts(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
