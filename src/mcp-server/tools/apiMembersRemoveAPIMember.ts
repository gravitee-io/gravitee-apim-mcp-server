/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apiMembersRemoveAPIMember } from "../../funcs/apiMembersRemoveAPIMember.js";
import { RemoveApiMemberRequest$zodSchema } from "../../models/removeapimemberop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: RemoveApiMemberRequest$zodSchema,
};

export const tool$apiMembersRemoveAPIMember: ToolDefinition<typeof args> = {
  name: "API-members-remove-api-member",
  description: `Remove one API member

Remove an API member.

Returns a 400 HTTP Error:
 - when the user tries to remove a PrimaryOwner.

User must have the API_MEMBER[DELETE] permission.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apiMembersRemoveAPIMember(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
