/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apIsDuplicateApi } from "../../funcs/apIsDuplicateApi.js";
import { DuplicateApiRequest$zodSchema } from "../../models/duplicateapiop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: DuplicateApiRequest$zodSchema,
};

export const tool$apIsDuplicateApi: ToolDefinition<typeof args> = {
  name: "AP-is-duplicate-api",
  description: `Duplicate an API

Create a new API from an existing one.
Context-path is required for HTTP APIs and host is required for TCP APIs. If one of these fields is missing, then it returns a 400 Bad Request.
User must have at least the API_DEFINITION[READ] and ENVIRONMENT_API[CREATE] permissions.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apIsDuplicateApi(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
