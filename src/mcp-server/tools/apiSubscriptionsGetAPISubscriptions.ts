/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apiSubscriptionsGetAPISubscriptions } from "../../funcs/apiSubscriptionsGetAPISubscriptions.js";
import { GetApiSubscriptionsRequest$zodSchema } from "../../models/getapisubscriptionsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetApiSubscriptionsRequest$zodSchema,
};

export const tool$apiSubscriptionsGetAPISubscriptions: ToolDefinition<
  typeof args
> = {
  name: "API-subscriptions-get-api-subscriptions",
  description: `Get the API's subscriptions

List subscriptions for a given API, always filtered by a \`status\` and the possibility to filter by \`security\`.

User must have API_SUBSCRIPTION[READ] permissions to access endpoint.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apiSubscriptionsGetAPISubscriptions(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
