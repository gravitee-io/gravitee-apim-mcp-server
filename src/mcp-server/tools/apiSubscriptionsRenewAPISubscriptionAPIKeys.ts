/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apiSubscriptionsRenewAPISubscriptionAPIKeys } from "../../funcs/apiSubscriptionsRenewAPISubscriptionAPIKeys.js";
import { RenewApiSubscriptionApiKeysRequest$zodSchema } from "../../models/renewapisubscriptionapikeysop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: RenewApiSubscriptionApiKeysRequest$zodSchema,
};

export const tool$apiSubscriptionsRenewAPISubscriptionAPIKeys: ToolDefinition<
  typeof args
> = {
  name: "API-subscriptions-renew-api-subscription-api-keys",
  description: `Renew the subscription API Keys.

Renew the subscription API Key by setting an expiration date on the existing active API Keys and creating a new API Key.<br>
The newly created API Key is returned in response.

User must have the API_SUBSCRIPTION[UPDATE] permission.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apiSubscriptionsRenewAPISubscriptionAPIKeys(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
