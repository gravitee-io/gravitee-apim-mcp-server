/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apIsStartApi } from "../../funcs/apIsStartApi.js";
import { StartApiRequest$zodSchema } from "../../models/startapiop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: StartApiRequest$zodSchema,
};

export const tool$apIsStartApi: ToolDefinition<typeof args> = {
  name: "AP-is-start-api",
  description: `Start an API

Change the API's status to STARTED.

Return a 400 HTTP Error:
 - when user tries to start an ARCHIVED API
 - when the API is already STARTED
 - when the API needs to be reviewed (only if Review feature is activated).

User must have the API_DEFINITION[UPDATE] permission.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apIsStartApi(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
