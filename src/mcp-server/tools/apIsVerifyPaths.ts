/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apIsVerifyPaths } from "../../funcs/apIsVerifyPaths.js";
import { VerifyPathsRequest$zodSchema } from "../../models/verifypathsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: VerifyPathsRequest$zodSchema,
};

export const tool$apIsVerifyPaths: ToolDefinition<typeof args> = {
  name: "AP-is-verify-paths",
  description: `Verify HTTP API paths

Verify paths before creating or updating a HTTP API.<br>
This will check paths and hosts (depending on environment domain restrictions), and will check that path is not already used by other APIs in the environment.<br>
The result will indicate if the paths are OK, and give the reason of the failure if they are not (path contains invalid chars, path is already covered by another API,...)`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await apIsVerifyPaths(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
